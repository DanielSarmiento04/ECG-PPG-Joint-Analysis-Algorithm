# Pipeline Configuration
pipeline:
  name: "blood_pressure_prediction_pipeline"
  version: "2.0.0"
  description: "Enhanced ML pipeline for ECG/PPG-based blood pressure prediction"
  
  # Execution settings
  execution:
    # Pipeline orchestration
    orchestration: "prefect"  # 'prefect', 'airflow', 'kedro'
    
    # Parallel execution
    parallel_tasks: true
    max_workers: 4
    
    # Resource allocation
    memory_limit: "8GB"
    cpu_limit: 4
    
    # Retry configuration
    retries: 3
    retry_delay: 60  # seconds
    
  # Workflow stages
  stages:
    data_ingestion:
      enabled: true
      timeout: 300  # seconds
      
    data_validation:
      enabled: true
      timeout: 600
      
    feature_extraction:
      enabled: true
      timeout: 1200
      
    feature_selection:
      enabled: true
      timeout: 600
      
    model_training:
      enabled: true
      timeout: 3600
      
    model_evaluation:
      enabled: true
      timeout: 900
      
    model_selection:
      enabled: true
      timeout: 300
      
    model_registration:
      enabled: true
      timeout: 300
      
    report_generation:
      enabled: true
      timeout: 600

# Logging configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # File logging
  file_logging:
    enabled: true
    log_dir: "logs"
    max_file_size: "10MB"
    backup_count: 5
    
  # Console logging
  console_logging:
    enabled: true
    
  # Structured logging for monitoring
  structured_logging:
    enabled: true
    format: "json"

# Monitoring and alerting
monitoring:
  enabled: true
  
  # Performance monitoring
  performance:
    track_memory_usage: true
    track_cpu_usage: true
    track_execution_time: true
    
  # Model performance monitoring
  model_monitoring:
    enabled: true
    drift_detection: true
    performance_degradation_threshold: 0.05  # R² drop
    
  # Alerts
  alerts:
    enabled: true
    channels: ['email', 'slack']  # Configure in secrets
    conditions:
      - type: 'performance_degradation'
        threshold: 0.05
      - type: 'data_drift'
        threshold: 0.1
      - type: 'pipeline_failure'

# Model registry and versioning
model_registry:
  enabled: true
  backend: "mlflow"  # 'mlflow', 'wandb', 'neptune'
  
  # MLflow configuration
  mlflow:
    tracking_uri: "sqlite:///models/mlflow.db"
    experiment_name: "blood_pressure_prediction"
    
  # Model versioning
  versioning:
    strategy: "semantic"  # 'semantic', 'timestamp', 'hash'
    auto_version: true
    
  # Model promotion
  promotion:
    stages: ['staging', 'production']
    approval_required: true
    performance_threshold: 0.75  # Minimum R² for promotion

# Experiment tracking
experiment_tracking:
  enabled: true
  
  # Parameters to track
  track_parameters: true
  track_metrics: true
  track_artifacts: true
  track_code: true
  
  # Hyperparameter optimization
  hyperopt:
    enabled: true
    method: 'grid_search'  # 'grid_search', 'random_search', 'bayesian'
    max_trials: 100
    
# Data and model artifacts
artifacts:
  # Data artifacts
  data:
    raw_data: "data/raw"
    processed_data: "data/processed"
    features: "data/features"
    
  # Model artifacts
  models:
    trained_models: "models/trained"
    serialized_models: "models/serialized"
    model_metadata: "models/metadata"
    
  # Reports and visualizations
  reports:
    evaluation_reports: "reports/evaluation"
    visualizations: "reports/visualizations"
    clinical_validation: "reports/clinical"

# Security and compliance
security:
  # Data privacy
  data_privacy:
    anonymize_patient_ids: true
    encryption_at_rest: false
    encryption_in_transit: false
    
  # Access control
  access_control:
    enabled: false
    rbac: false
    
# Performance optimization
performance:
  # Caching
  caching:
    enabled: true
    cache_dir: "cache"
    ttl: 3600  # seconds
    
  # Parallel processing
  parallelization:
    feature_extraction: true
    model_training: true
    hyperparameter_tuning: true
    
  # Memory optimization
  memory_optimization:
    batch_processing: true
    batch_size: 1000
    lazy_loading: true

# Deployment configuration
deployment:
  # Model serving
  serving:
    enabled: false
    framework: "fastapi"  # 'fastapi', 'flask', 'bentoml'
    port: 8000
    workers: 2
    
  # Containerization
  containerization:
    enabled: false
    base_image: "python:3.9-slim"
    requirements_file: "requirements.txt"
    
  # Cloud deployment
  cloud:
    enabled: false
    provider: "aws"  # 'aws', 'gcp', 'azure'
    
# Testing configuration
testing:
  # Unit tests
  unit_tests:
    enabled: true
    coverage_threshold: 80
    
  # Integration tests
  integration_tests:
    enabled: true
    
  # Model validation tests
  model_tests:
    enabled: true
    performance_tests: true
    data_drift_tests: true
